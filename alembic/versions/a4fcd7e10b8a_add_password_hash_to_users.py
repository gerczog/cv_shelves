"""add_password_hash_to_users

Revision ID: a4fcd7e10b8a
Revises: 33769a6fa6c0
Create Date: 2025-10-22 09:50:32.921445

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a4fcd7e10b8a'
down_revision: Union[str, Sequence[str], None] = '33769a6fa6c0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER COLUMN, so we skip the type changes
    # op.alter_column('predictions', 'confidence_threshold',
    #            existing_type=sa.REAL(),
    #            type_=sa.Float(),
    #            existing_nullable=True)
    # op.alter_column('predictions', 'rfdetr_threshold',
    #            existing_type=sa.REAL(),
    #            type_=sa.Float(),
    #            existing_nullable=True)
    # op.alter_column('predictions', 'yolo_threshold',
    #            existing_type=sa.REAL(),
    #            type_=sa.Float(),
    #            existing_nullable=True)
    
    # Skip index operations as they already exist
    # try:
    #     op.drop_index(op.f('idx_predictions_image_hash'), table_name='predictions')
    # except:
    #     pass  # Index might not exist
    
    # try:
    #     op.create_index(op.f('ix_predictions_image_hash'), 'predictions', ['image_hash'], unique=False)
    # except:
    #     pass  # Index might already exist
    
    # Add password_hash column with default value for existing users
    op.add_column('users', sa.Column('password_hash', sa.String(length=255), nullable=True))
    
    # Update existing users with a default password hash (they'll need to reset password)
    op.execute("UPDATE users SET password_hash = 'default_password_needs_reset' WHERE password_hash IS NULL")
    
    # SQLite doesn't support ALTER COLUMN to change nullable, so we'll leave it nullable
    # The application will handle validation
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'password_hash')
    op.drop_index(op.f('ix_predictions_image_hash'), table_name='predictions')
    op.create_index(op.f('idx_predictions_image_hash'), 'predictions', ['image_hash'], unique=False)
    # SQLite doesn't support ALTER COLUMN, so we skip the type changes
    # op.alter_column('predictions', 'yolo_threshold',
    #            existing_type=sa.Float(),
    #            type_=sa.REAL(),
    #            existing_nullable=True)
    # op.alter_column('predictions', 'rfdetr_threshold',
    #            existing_type=sa.Float(),
    #            type_=sa.REAL(),
    #            existing_nullable=True)
    # op.alter_column('predictions', 'confidence_threshold',
    #            existing_type=sa.Float(),
    #            type_=sa.REAL(),
    #            existing_nullable=True)
    # ### end Alembic commands ###
