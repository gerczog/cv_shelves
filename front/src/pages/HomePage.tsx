import React, { useState, useEffect } from 'react';
import { Card, Row, Col, Typography, Space, Statistic, Alert, Spin } from 'antd';
import { CheckCircleOutlined, ExclamationCircleOutlined, LoadingOutlined } from '@ant-design/icons';
import { apiService } from '../services/api';
import { ModelInfo } from '../types';
import { usePrediction } from '../context/PredictionContext';

const { Title, Text } = Typography;

const HomePage: React.FC = () => {
  const { state } = usePrediction();
  const [modelInfo, setModelInfo] = useState<ModelInfo | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchModelInfo = async () => {
      try {
        setLoading(true);
        // –î–æ–¥–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è —à–≤–∏–¥–∫–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
        
        const info = await apiService.getModelInfo();
        clearTimeout(timeoutId);
        setModelInfo(info);
        setError(null);
      } catch (err) {
        if (err instanceof Error && err.name === 'AbortError') {
          setError('–¢–∞–π–º–∞—É—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ API. –ú–æ–¥–µ–ª—ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –Ω–µ –≥–æ—Ç–æ–≤—ñ.');
        } else {
          setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ API. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –±–µ–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω–∏–π.');
        }
        console.error('Failed to fetch model info:', err);
      } finally {
        setLoading(false);
      }
    };

    fetchModelInfo();
  }, []);


  const getModelStatus = (loaded: boolean) => {
    if (loaded) {
      return (
        <Space>
          <CheckCircleOutlined style={{ color: '#52c41a' }} />
          <Text style={{ color: '#52c41a' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞</Text>
        </Space>
      );
    }
    return (
      <Space>
        <ExclamationCircleOutlined style={{ color: '#ff4d4f' }} />
        <Text style={{ color: '#ff4d4f' }}>–ù–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞</Text>
      </Space>
    );
  };

  if (loading) {
    return (
      <div style={{ textAlign: 'center', padding: '48px' }}>
        <Spin size="large" />
        <div style={{ marginTop: '16px' }}>
          <Text>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –º–æ–¥–µ–ª—ñ...</Text>
        </div>
      </div>
    );
  }

  return (
    <div style={{ padding: '24px', maxWidth: '1200px', margin: '0 auto' }}>
      <Title level={2}>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ CV Shelves ML</Title>
      <Text type="secondary" style={{ fontSize: '16px' }}>
        –°–∏—Å—Ç–µ–º–∞ –º–∞—à–∏–Ω–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –¥–ª—è –¥–µ—Ç–µ–∫—Ü—ñ—ó –æ–±'—î–∫—Ç—ñ–≤ –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è—Ö
      </Text>


      {error && (
        <Alert
          message="–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è"
          description={error}
          type="error"
          showIcon
          style={{ marginTop: '24px' }}
        />
      )}

      <Row gutter={[24, 24]} style={{ marginTop: '32px' }}>
        {/* Model Status */}
        <Col xs={24} lg={12}>
          <Card title="–°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–µ–π" size="small">
            <Space direction="vertical" style={{ width: '100%' }} size="middle">
              <div>
                <Text strong>RFDETR (Object Detection)</Text>
                <br />
                {modelInfo ? getModelStatus(modelInfo.rfdetr.loaded) : <LoadingOutlined />}
              </div>
              <div>
                <Text strong>YOLO (Real-time Detection)</Text>
                <br />
                {modelInfo ? getModelStatus(modelInfo.yolo.loaded) : <LoadingOutlined />}
              </div>
            </Space>
          </Card>
        </Col>

        {/* Quick Stats */}
        <Col xs={24} lg={12}>
          <Card title="–®–≤–∏–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" size="small">
            <Row gutter={16}>
              <Col span={12}>
                <Statistic
                  title="–î–æ—Å—Ç—É–ø–Ω—ñ –º–æ–¥–µ–ª—ñ"
                  value={modelInfo ? 
                    (modelInfo.rfdetr.loaded ? 1 : 0) + (modelInfo.yolo.loaded ? 1 : 0) 
                    : 0
                  }
                  suffix="/ 2"
                />
              </Col>
              <Col span={12}>
                <Statistic
                  title="–°—Ç–∞—Ç—É—Å API"
                  value={error ? "–ü–æ–º–∏–ª–∫–∞" : "–ü—Ä–∞—Ü—é—î"}
                  valueStyle={{ color: error ? '#ff4d4f' : '#52c41a' }}
                />
              </Col>
            </Row>
          </Card>
        </Col>
      </Row>

      {/* Features */}
      <Row gutter={[24, 24]} style={{ marginTop: '32px' }}>
        <Col xs={24} md={8}>
          <Card title="üîç –î–µ—Ç–µ–∫—Ü—ñ—è –æ–±'—î–∫—Ç—ñ–≤" size="small">
            <Text>
              –ó–∞–≤–∞–Ω—Ç–∞–∂—É–π—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º—É–π—Ç–µ —Ç–æ—á–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–µ—Ç–µ–∫—Ü—ñ—ó –æ–±'—î–∫—Ç—ñ–≤ 
              –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—É—á–∞—Å–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è.
            </Text>
          </Card>
        </Col>
        <Col xs={24} md={8}>
          <Card title="ü§ñ –ú–Ω–æ–∂–∏–Ω–Ω—ñ –º–æ–¥–µ–ª—ñ" size="small">
            <Text>
              –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ RFDETR, YOLO –∞–±–æ –æ–±–∏–¥–≤—ñ –º–æ–¥–µ–ª—ñ –æ–¥–Ω–æ—á–∞—Å–Ω–æ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è 
              —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–∞ –≤–∏–±–æ—Ä—É –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—É.
            </Text>
          </Card>
        </Col>
        <Col xs={24} md={8}>
          <Card title="üìù –Ü—Å—Ç–æ—Ä—ñ—è —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ" size="small">
            <Text>
              –ó–±–µ—Ä—ñ–≥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑—É, –¥–æ–¥–∞–≤–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Ç–∞ –ø–µ—Ä–µ–≥–ª—è–¥–∞–π—Ç–µ 
              –ø–æ–≤–Ω—É —ñ—Å—Ç–æ—Ä—ñ—é –≤—Å—ñ—Ö –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å.
            </Text>
          </Card>
        </Col>
      </Row>

      {/* Getting Started */}
      <Card title="üöÄ –ü–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏" style={{ marginTop: '32px' }}>
        <Space direction="vertical" size="middle">
          <Text>1. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–î–µ—Ç–µ–∫—Ü—ñ—è"</Text>
          <Text>2. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É</Text>
          <Text>3. –û–±–µ—Ä—ñ—Ç—å –º–æ–¥–µ–ª—å (RFDETR, YOLO –∞–±–æ –æ–±–∏–¥–≤—ñ)</Text>
          <Text>4. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –ø–æ—Ä—ñ–≥ –≤–ø–µ–≤–Ω–µ–Ω–æ—Å—Ç—ñ</Text>
          <Text>5. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∞–Ω–∞–ª—ñ–∑ —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏</Text>
          <Text>6. –î–æ–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É</Text>
          <Text>7. –ü–µ—Ä–µ–≥–ª—è–¥–∞–π—Ç–µ —ñ—Å—Ç–æ—Ä—ñ—é –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ "–Ü—Å—Ç–æ—Ä—ñ—è"</Text>
        </Space>
      </Card>
    </div>
  );
};

export default HomePage;
